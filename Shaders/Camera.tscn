[gd_scene load_steps=4 format=3 uid="uid://ccyupmtl2viyw"]

[sub_resource type="Shader" id="Shader_uu2hy"]
code = "shader_type spatial;
uniform sampler2D SCREEN_TEXTURE : hint_screen_texture, filter_linear_mipmap;
uniform int pixel_size = 5;

uniform vec4 color_01 = vec4(0.69,0.66,0.59,1.0);
uniform vec4 color_02 = vec4(0.84,0.8,0.7,1.0);
uniform vec4 color_03 = vec4(0.53,0.55,0.51,1.0);
uniform vec4 color_04 = vec4(0.42,0.42,0.39,1.0);
uniform vec4 color_05 = vec4(0.34,0.34,0.32,1.0);
uniform vec4 color_06 = vec4(0.26,0.26,0.25,1.0);
uniform vec4 color_07 = vec4(0.16,0.16,0.15,1.0);
uniform vec4 color_08 = vec4(0.7,0.75,0.4,1.0);
uniform vec4 color_09 = vec4(0.49,0.64,0.38,1.0);
uniform vec4 color_10 = vec4(0.39,0.49,0.27,1.0);
uniform vec4 color_11 = vec4(0.34,0.41,0.25,1.0);
uniform vec4 color_12 = vec4(0.25,0.33,0.2,1.0);
uniform vec4 color_13 = vec4(0.72,0.23,0.26,1.0);
uniform vec4 color_14 = vec4(0.62,0.13,0.2,1.0);
uniform vec4 color_15 = vec4(0.47,0.13,0.17,1.0);
uniform vec4 color_16 = vec4(0.5,0.43,0.36,1.0);
uniform vec4 color_17 = vec4(0.39,0.34,0.27,1.0);
uniform vec4 color_18 = vec4(0.3,0.26,0.22,1.0);

void fragment() {
	
	vec4 colors[18] = {color_01, color_02, color_03, color_04, color_05, color_06, color_07, color_08, color_09, color_10, color_11, color_12,
	color_13, color_14, color_15, color_16, color_17, color_18};
	float min_diff = -1.0;
	vec4 min_color = vec4(0.0,0.0,0.0,1.0);
	
	vec2 uv = SCREEN_UV;
	
	vec4 temp = textureLod(SCREEN_TEXTURE, uv, 0.0);
	
	for (int i = 0; i < colors.length(); i++){
		
		float curr_dist = distance(colors[i], temp);
		if (curr_dist < min_diff){
			
			min_diff = curr_dist;
			min_color = colors[i];
			
		}
		
	}
	
	ALBEDO.rgb = min_color.rgb;
	
	
	float x = float(int(FRAGCOORD.x) % pixel_size);
	float y = float(int(FRAGCOORD.y) % pixel_size);
	
	x = FRAGCOORD.x + floor(float(pixel_size) / 2.0) - x;
	y = FRAGCOORD.y + floor(float(pixel_size) / 2.0) - y;
	
	ALBEDO = texture(SCREEN_TEXTURE, vec2(x, y) / VIEWPORT_SIZE).xyz;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_mt8hq"]
render_priority = 0
shader = SubResource("Shader_uu2hy")
shader_parameter/pixel_size = 1
shader_parameter/color_01 = Vector4(0.1, 0.1, 0.1, 1)
shader_parameter/color_02 = Vector4(0.9, 0.9, 0.9, 1)
shader_parameter/color_03 = Vector4(0.53, 0.55, 0.51, 1)
shader_parameter/color_04 = Vector4(0.42, 0.42, 0.39, 1)
shader_parameter/color_05 = Vector4(0.34, 0.34, 0.32, 1)
shader_parameter/color_06 = Vector4(0.26, 0.26, 0.25, 1)
shader_parameter/color_07 = Vector4(0.16, 0.16, 0.15, 1)
shader_parameter/color_08 = Vector4(0.7, 0.75, 0.4, 1)
shader_parameter/color_09 = Vector4(0.49, 0.64, 0.38, 1)
shader_parameter/color_10 = Vector4(0.39, 0.49, 0.27, 1)
shader_parameter/color_11 = Vector4(0.34, 0.41, 0.25, 1)
shader_parameter/color_12 = Vector4(0.25, 0.33, 0.2, 1)
shader_parameter/color_13 = Vector4(0.72, 0.23, 0.26, 1)
shader_parameter/color_14 = Vector4(0.62, 0.13, 0.2, 1)
shader_parameter/color_15 = Vector4(0.47, 0.13, 0.17, 1)
shader_parameter/color_16 = Vector4(0.5, 0.43, 0.36, 1)
shader_parameter/color_17 = Vector4(0.39, 0.34, 0.27, 1)
shader_parameter/color_18 = Vector4(0.3, 0.26, 0.22, 1)

[sub_resource type="QuadMesh" id="QuadMesh_b2blp"]
material = SubResource("ShaderMaterial_mt8hq")
size = Vector2(5, 5)

[node name="Camera" type="Node2D"]

[node name="Camera3D" type="Camera3D" parent="."]
fov = 50.0

[node name="MeshInstance3D" type="MeshInstance3D" parent="Camera3D"]
transform = Transform3D(1, 0, 5.96046e-08, 5.96046e-08, 1, -1.49012e-07, 1.19209e-07, 0, 1, 2.14577e-06, -2.6226e-06, -1.77061)
mesh = SubResource("QuadMesh_b2blp")
